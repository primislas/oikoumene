package com.lomicron.eu4.repository.api.modifiers

import com.lomicron.eu4.model.modifiers.Modifier

trait StaticModifierRepository extends ModifierRepository {

  def nullModifier: Option[Modifier] = find("null_modifier")

  def governmentRank(id: Int): Option[Modifier] = find(s"configured_gov_rank_$id")

  def difficultyVeryEasyPlayer: Option[Modifier] = find("difficulty_very_easy_player")
  def difficultyEasyPlayer: Option[Modifier] = find("difficulty_easy_player")
  def difficultyNormalPlayer: Option[Modifier] = find("difficulty_normal_player")
  def difficultyHardPlayer: Option[Modifier] = find("difficulty_hard_player")
  def difficultyVeryHardPlayer: Option[Modifier] = find("difficulty_very_hard_player")

  def difficultyVeryEasyAi: Option[Modifier] = find("difficulty_very_easy_ai")
  def difficultyEasyAi: Option[Modifier] = find("difficulty_easy_ai")
  def difficultyNormalAi: Option[Modifier] = find("difficulty_normal_ai")
  def difficultyHardAi: Option[Modifier] = find("difficulty_hard_ai")
  def difficultyVeryHardAi: Option[Modifier] = find("difficulty_very_hard_ai")

  def city: Option[Modifier] = find("city")
  def port: Option[Modifier] = find("port")
  def inState: Option[Modifier] = find("in_state")
  def inCapitalState: Option[Modifier] = find("in_capital_state")
  def coastal: Option[Modifier] = find("coastal")
  def nonCoastal: Option[Modifier] = find("non_coastal")
  def landProvince: Option[Modifier] = find("land_province")
  def seaZone: Option[Modifier] = find("sea_zone")
  def coastalSea: Option[Modifier] = find("coastal_sea")

  def tropical: Option[Modifier] = find("tropical")
  def arctic: Option[Modifier] = find("arctic")
  def arid: Option[Modifier] = find("arid")
  def mildWinter: Option[Modifier] = find("mild_winter")
  def normalWinter: Option[Modifier] = find("normal_winter")
  def severeWinter: Option[Modifier] = find("severe_winter")
  def mildMonsoon: Option[Modifier] = find("mild_monsoon")
  def normalMonsoon: Option[Modifier] = find("normal_monsoon")
  def severeMonsoon: Option[Modifier] = find("severe_monsoon")

  def provincialTaxIncome: Option[Modifier] = find("provincial_tax_income")
  def provincialProductionSize: Option[Modifier] = find("provincial_production_size")
  def manpower: Option[Modifier] = find("manpower")
  def development: Option[Modifier] = find("development")
  def developmentScaled: Option[Modifier] = find("development_scaled")
  def hordeDevelopment: Option[Modifier] = find("horde_development")

  def sailors: Option[Modifier] = find("sailors")

  def knowledgeSharing: Option[Modifier] = find("knowledge_sharing")
  def cardinalsSpreadInstitution: Option[Modifier] = find("cardinals_spread_institution")
  def patriarchState: Option[Modifier] = find("patriarch_state")
  def patriarchAuthorityLocal: Option[Modifier] = find("patriarch_authority_local")
  def patriarchAuthorityGlobal: Option[Modifier] = find("patriarch_authority_global")
  def pashaState: Option[Modifier] = find("pasha_state")

  def colonyLevel: Option[Modifier] = find("colony_level")
  def nativeAssimilation: Option[Modifier] = find("native_assimilation")
  def nativeAggressiveness: Option[Modifier] = find("native_aggressiveness")

  def core: Option[Modifier] = find("core")
  def nonCore: Option[Modifier] = find("non_core")
  def territoryCore: Option[Modifier] = find("territory_core")
  def territoryNonCore: Option[Modifier] = find("territory_non_core")
  def inTradeCompany: Option[Modifier] = find("in_trade_company")
  def leftTradeCompany: Option[Modifier] = find("left_trade_company")

  def marchBonus: Option[Modifier] = find("march_bonus")
  def capitalCity: Option[Modifier] = find("capital_city")
  def seatInParliament: Option[Modifier] = find("seat_in_parliament")
  def noAdjacentControlled: Option[Modifier] = find("no_adjacent_controlled")
  def provinceRazed: Option[Modifier] = find("province_razed")
  def sameCultureGroup: Option[Modifier] = find("same_culture_group")
  def nonAcceptedCulture: Option[Modifier] = find("non_accepted_culture")
  def acceptedCultureDemoted: Option[Modifier] = find("accepted_culture_demoted")
  def nonAcceptedCultureRepublic: Option[Modifier] = find("non_accepted_culture_republic")
  def tolerance: Option[Modifier] = find("tolerance")
  def intolerance: Option[Modifier] = find("intolerance")

  def underSiege: Option[Modifier] = find("under_siege")
  def blockaded: Option[Modifier] = find("blockaded")
  def occupied: Option[Modifier] = find("occupied")
  def devastation: Option[Modifier] = find("devastation")
  def prosperity: Option[Modifier] = find("prosperity")
  def slavesRaided: Option[Modifier] = find("slaves_raided")
  def unrest: Option[Modifier] = find("unrest")
  def recentUprising: Option[Modifier] = find("recent_uprising")
  def nationalism: Option[Modifier] = find("nationalism")
  def harshTreatment: Option[Modifier] = find("harsh_treatment")
  def activeMissionary: Option[Modifier] = find("active_missionary")
  def scorchedEarth: Option[Modifier] = find("scorched_earth")

  def localAutonomyMultiplicative: Option[Modifier] = find("local_autonomy_multiplicative")
  def localAutonomy: Option[Modifier] = find("local_autonomy")
  def localAutonomyTradeCompanyMultiplicative: Option[Modifier] = find("local_autonomy_trade_company_multiplicative")
  def localAutonomyTradeCompany: Option[Modifier] = find("local_autonomy_trade_company")
  def friendlyRegiments: Option[Modifier] = find("friendly_regiments")
  def nationalDefense: Option[Modifier] = find("national_defense")
  def resourceDepleted: Option[Modifier] = find("resource_depleted")
  def baseValues: Option[Modifier] = find("base_values")
  def aiNation: Option[Modifier] = find("ai_nation")
  def warTaxes: Option[Modifier] = find("war_taxes")
  def stability: Option[Modifier] = find("stability")
  def positiveStability: Option[Modifier] = find("positive_stability")
  def privateering: Option[Modifier] = find("privateering")
  def negativeStability: Option[Modifier] = find("negative_stability")
  def positiveMandate: Option[Modifier] = find("positive_mandate")
  def negativeMandate: Option[Modifier] = find("negative_mandate")
  def lostMandateOfHeaven: Option[Modifier] = find("lost_mandate_of_heaven")
  def cancelledLoan: Option[Modifier] = find("cancelled_loan")
  def bankLoan: Option[Modifier] = find("bank_loan")
  def inflation: Option[Modifier] = find("inflation")
  def bankruptcy: Option[Modifier] = find("bankruptcy")
  def war: Option[Modifier] = find("war")
  def peace: Option[Modifier] = find("peace")
  def unconditionalSurrender: Option[Modifier] = find("unconditional_surrender")
  def callForPeace: Option[Modifier] = find("call_for_peace")
  def warExhaustion: Option[Modifier] = find("war_exhaustion")
  def doom: Option[Modifier] = find("doom")
  def authority: Option[Modifier] = find("authority")
  def regencyCouncil: Option[Modifier] = find("regency_council")
  def tradeEfficiency: Option[Modifier] = find("trade_efficiency")
  def productionEfficiency: Option[Modifier] = find("production_efficiency")
  def tradeRefusal: Option[Modifier] = find("trade_refusal")
  def mercantilism: Option[Modifier] = find("mercantilism")
  def armyTradition: Option[Modifier] = find("army_tradition")
  def navyTradition: Option[Modifier] = find("navy_tradition")
  def positivePiety: Option[Modifier] = find("positive_piety")
  def negativePiety: Option[Modifier] = find("negative_piety")
  def defenderOfFaith: Option[Modifier] = find("defender_of_faith")
  def defenderOfFaithRefusedCta: Option[Modifier] = find("defender_of_faith_refused_cta")
  def emperor: Option[Modifier] = find("emperor")
  def statesInHre: Option[Modifier] = find("states_in_hre")
  def freeCitiesInHre: Option[Modifier] = find("free_cities_in_hre")
  def freeCityInHre: Option[Modifier] = find("free_city_in_hre")
  def memberInHre: Option[Modifier] = find("member_in_hre")
  def occupiedImperial: Option[Modifier] = find("occupied_imperial")
  def emperorRevokedReform: Option[Modifier] = find("emperor_revoked_reform")
  def numOfMarriages: Option[Modifier] = find("num_of_marriages")
  def numOfProvinces: Option[Modifier] = find("num_of_provinces")
  def countryDevelopment: Option[Modifier] = find("country_development")
  def tribalAllegiance: Option[Modifier] = find("tribal_allegiance")
  def legitimacy: Option[Modifier] = find("legitimacy")
  def hordeUnity: Option[Modifier] = find("horde_unity")
  def devotion: Option[Modifier] = find("devotion")
  def meritocracy: Option[Modifier] = find("meritocracy")
  def lowMeritocracy: Option[Modifier] = find("low_meritocracy")
  def corruption: Option[Modifier] = find("corruption")
  def rootOutCorruption: Option[Modifier] = find("root_out_corruption")
  def recoveryMotivation: Option[Modifier] = find("recovery_motivation")
  def militarizedSociety: Option[Modifier] = find("militarized_society")
  def luck: Option[Modifier] = find("luck")
  def overExtension: Option[Modifier] = find("over_extension")
  def prestige: Option[Modifier] = find("prestige")
  def noDebateInParliament: Option[Modifier] = find("no_debate_in_parliament")
  def republicanTradition: Option[Modifier] = find("republican_tradition")
  def inverseRepublicanTradition: Option[Modifier] = find("inverse_republican_tradition")
  def curiaController: Option[Modifier] = find("curia_controller")
  def boughtIndulgence: Option[Modifier] = find("bought_indulgence")
  def religiousUnity: Option[Modifier] = find("religious_unity")
  def inverseReligiousUnity: Option[Modifier] = find("inverse_religious_unity")
  def totalOccupation: Option[Modifier] = find("total_occupation")
  def totalBlockaded: Option[Modifier] = find("total_blockaded")
  def uncontestedCores: Option[Modifier] = find("uncontested_cores")
  def numObjectivesFullfilled: Option[Modifier] = find("num_objectives_fullfilled")
  def productionLeader: Option[Modifier] = find("production_leader")
  def tradeCompanyBonus: Option[Modifier] = find("trade_company_bonus")
  def bonusFromMerchantRepublics: Option[Modifier] = find("bonus_from_merchant_republics")
  def bonusFromMerchantRepublicsForTradeLeagueMember: Option[Modifier] = find("bonus_from_merchant_republics_for_trade_league_member")
  def merchantRepublicMechanicsModifier: Option[Modifier] = find("merchant_republic_mechanics_modifier")
  def federationLeader: Option[Modifier] = find("federation_leader")
  def tributaryStateBehindOverlordTechAdm: Option[Modifier] = find("tributary_state_behind_overlord_tech_adm")
  def tributaryStateBehindOverlordTechDip: Option[Modifier] = find("tributary_state_behind_overlord_tech_dip")
  def tributaryStateBehindOverlordTechMil: Option[Modifier] = find("tributary_state_behind_overlord_tech_mil")
  def libertyDesire: Option[Modifier] = find("liberty_desire")
  def isGreatPower: Option[Modifier] = find("is_great_power")
  def inGoldenEra: Option[Modifier] = find("in_golden_era")
  def absolutism: Option[Modifier] = find("absolutism")
  def lowArmyProfessionalism: Option[Modifier] = find("low_army_professionalism")
  def highArmyProfessionalism: Option[Modifier] = find("high_army_professionalism")
  def streltsyModifier: Option[Modifier] = find("streltsy_modifier")
  def powerProjection: Option[Modifier] = find("power_projection")
  def powerProjection25: Option[Modifier] = find("power_projection_25")
  def tradeCompanyStrong: Option[Modifier] = find("trade_company_strong")
  def tradeCompanyDominant: Option[Modifier] = find("trade_company_dominant")
  def largeColonialNation: Option[Modifier] = find("large_colonial_nation")
  def marchSubject: Option[Modifier] = find("march_subject")
  def vassalSubject: Option[Modifier] = find("vassal_subject")
  def daimyoSubject: Option[Modifier] = find("daimyo_subject")
  def unionSubject: Option[Modifier] = find("union_subject")
  def allNations: Option[Modifier] = find("all_nations")
  def subjectNation: Option[Modifier] = find("subject_nation")
  def vassalNation: Option[Modifier] = find("vassal_nation")
  def primitiveNation: Option[Modifier] = find("primitive_nation")
  def maintainedForts: Option[Modifier] = find("maintained_forts")
  def govRank1: Option[Modifier] = find("gov_rank_1")
  def govRank2: Option[Modifier] = find("gov_rank_2")
  def govRank3: Option[Modifier] = find("gov_rank_3")
  def govRank4: Option[Modifier] = find("gov_rank_4")
  def govRank5: Option[Modifier] = find("gov_rank_5")
  def govRank6: Option[Modifier] = find("gov_rank_6")
  def govRank7: Option[Modifier] = find("gov_rank_7")
  def govRank8: Option[Modifier] = find("gov_rank_8")
  def govRank9: Option[Modifier] = find("gov_rank_9")
  def govRank10: Option[Modifier] = find("gov_rank_10")
  def autonomyIncreased: Option[Modifier] = find("autonomy_increased")
  def autonomyDecreased: Option[Modifier] = find("autonomy_decreased")
  def revolutionTarget: Option[Modifier] = find("revolution_target")
  def dishonouredAlliance: Option[Modifier] = find("dishonoured_alliance")
  def drillingArmies: Option[Modifier] = find("drilling_armies")
  def recruitmentSabotaged: Option[Modifier] = find("recruitment_sabotaged")
  def merchantsSlandered: Option[Modifier] = find("merchants_slandered")
  def discontentSowed: Option[Modifier] = find("discontent_sowed")
  def reputationSabotaged: Option[Modifier] = find("reputation_sabotaged")
  def corruptOfficials: Option[Modifier] = find("corrupt_officials")
  def scaledTradeLeagueLeader: Option[Modifier] = find("scaled_trade_league_leader")
  def inTradeLeague: Option[Modifier] = find("in_trade_league")
  def tutorialColonialRange: Option[Modifier] = find("tutorial_colonial_range")
  def customSetup: Option[Modifier] = find("custom_setup")
  def embargoRivals: Option[Modifier] = find("embargo_rivals")
  def scutage: Option[Modifier] = find("scutage")
  def subsidizeArmies: Option[Modifier] = find("subsidize_armies")
  def supportLoyalists: Option[Modifier] = find("support_loyalists")
  def sendOfficers: Option[Modifier] = find("send_officers")
  def divertTrade: Option[Modifier] = find("divert_trade")
  def karmaJustRight: Option[Modifier] = find("karma_just_right")
  def karmaTooHigh: Option[Modifier] = find("karma_too_high")
  def karmaTooLow: Option[Modifier] = find("karma_too_low")
  def invasionNation: Option[Modifier] = find("invasion_nation")
  def nativePolicyCoexist: Option[Modifier] = find("native_policy_coexist")
  def nativePolicyTrade: Option[Modifier] = find("native_policy_trade")
  def nativePolicyHostile: Option[Modifier] = find("native_policy_hostile")

  def highHarmony: Option[Modifier] = find("high_harmony")
  def lowHarmony: Option[Modifier] = find("low_harmony")
  def overlordDaimyoAtPeace: Option[Modifier] = find("overlord_daimyo_at_peace")
  def overlordDaimyoAtPeaceMax: Option[Modifier] = find("overlord_daimyo_at_peace_max")
  def overlordDaimyoAtPeaceMin: Option[Modifier] = find("overlord_daimyo_at_peace_min")
  def overlordDaimyoSameIsolationism: Option[Modifier] = find("overlord_daimyo_same_isolationism")
  def overlordDaimyoDifferentIsolationism: Option[Modifier] = find("overlord_daimyo_different_isolationism")
  def overlordDaimyoIsolationismMax: Option[Modifier] = find("overlord_daimyo_isolationism_max")
  def overlordDaimyoIsolationismMin: Option[Modifier] = find("overlord_daimyo_isolationism_min")

  def overlordSankinKotai: Option[Modifier] = find("overlord_sankin_kotai")
  def subjectSankinKotai: Option[Modifier] = find("subject_sankin_kotai")
  def overlordExpelRonin: Option[Modifier] = find("overlord_expel_ronin")
  def subjectExpelRonin: Option[Modifier] = find("subject_expel_ronin")
  def overlordSwordHunt: Option[Modifier] = find("overlord_sword_hunt")
  def subjectSwordHunt: Option[Modifier] = find("subject_sword_hunt")

  def supplyDepotArea: Option[Modifier] = find("supply_depot_area")
  def efficientTaxFarmingModifier: Option[Modifier] = find("efficient_tax_farming_modifier")
  def landAcquisitionModifier: Option[Modifier] = find("land_acquisition_modifier")
  def lenientTaxationModifier: Option[Modifier] = find("lenient_taxation_modifier")
  def trainHorsemanshipModifier: Option[Modifier] = find("train_horsemanship_modifier")
  def promoteCultureInGovernmentModifier: Option[Modifier] = find("promote_culture_in_government_modifier")
  def seizeClericalHoldingsModifier: Option[Modifier] = find("seize_clerical_holdings_modifier")
  def inviteMinoritiesModifier: Option[Modifier] = find("invite_minorities_modifier")

  def hanafiScholarModifier: Option[Modifier] = find("hanafi_scholar_modifier")
  def hanbaliScholarModifier: Option[Modifier] = find("hanbali_scholar_modifier")
  def malikiScholarModifier: Option[Modifier] = find("maliki_scholar_modifier")
  def shafiiScholarModifier: Option[Modifier] = find("shafii_scholar_modifier")
  def ismailiScholarModifier: Option[Modifier] = find("ismaili_scholar_modifier")
  def jafariScholarModifier: Option[Modifier] = find("jafari_scholar_modifier")
  def zaidiScholarModifier: Option[Modifier] = find("zaidi_scholar_modifier")

  def regimentDrillModifier: Option[Modifier] = find("regiment_drill_modifier")
  def armyDrillModifier: Option[Modifier] = find("army_drill_modifier")
  def janissaryRegiment: Option[Modifier] = find("janissary_regiment")
  def revolutionaryGuardRegiment: Option[Modifier] = find("revolutionary_guard_regiment")
  def innovativeness: Option[Modifier] = find("innovativeness")
  def rajputRegiment: Option[Modifier] = find("rajput_regiment")
  def raidingPartiesModifier: Option[Modifier] = find("raiding_parties_modifier")
  def serfsRecievedByCossacks: Option[Modifier] = find("serfs_recieved_by_cossacks")
  def cossacksModifier: Option[Modifier] = find("cossacks_modifier")
  def expandAdministationModifier: Option[Modifier] = find("expand_administation_modifier")
  def overGoverningCapacityModifier: Option[Modifier] = find("over_governing_capacity_modifier")
  def lostHegemony: Option[Modifier] = find("lost_hegemony")
  def atPeaceRevolutionary: Option[Modifier] = find("at_peace_revolutionary")

}
