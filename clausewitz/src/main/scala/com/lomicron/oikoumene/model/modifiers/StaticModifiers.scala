package com.lomicron.oikoumene.model.modifiers

object StaticModifiers {
  val nullModifier: String = "null_modifier"
  val difficultyVeryEasyPlayer: String = "difficulty_very_easy_player"
  val difficultyEasyPlayer: String = "difficulty_easy_player"
  val difficultyNormalPlayer: String = "difficulty_normal_player"
  val difficultyHardPlayer: String = "difficulty_hard_player"
  val difficultyVeryHardPlayer: String = "difficulty_very_hard_player"
  val difficultyVeryEasyAi: String = "difficulty_very_easy_ai"
  val difficultyEasyAi: String = "difficulty_easy_ai"
  val difficultyNormalAi: String = "difficulty_normal_ai"
  val difficultyHardAi: String = "difficulty_hard_ai"
  val difficultyVeryHardAi: String = "difficulty_very_hard_ai"
  val city: String = "city"
  val port: String = "port"
  val inState: String = "in_state"
  val inCapitalState: String = "in_capital_state"
  val coastal: String = "coastal"
  val seatInParliament: String = "seat_in_parliament"
  val nonCoastal: String = "non_coastal"
  val coastalSea: String = "coastal_sea"
  val tropical: String = "tropical"
  val arctic: String = "arctic"
  val arid: String = "arid"
  val seaZone: String = "sea_zone"
  val landProvince: String = "land_province"
  val mildWinter: String = "mild_winter"
  val normalWinter: String = "normal_winter"
  val severeWinter: String = "severe_winter"
  val mildMonsoon: String = "mild_monsoon"
  val normalMonsoon: String = "normal_monsoon"
  val severeMonsoon: String = "severe_monsoon"
  val blockaded: String = "blockaded"
  val noAdjacentControlled: String = "no_adjacent_controlled"
  val provincialTaxIncome: String = "provincial_tax_income"
  val provincialProductionSize: String = "provincial_production_size"
  val knowledgeSharing: String = "knowledge_sharing"
  val cardinalsSpreadInstitution: String = "cardinals_spread_institution"
  val manpower: String = "manpower"
  val sailors: String = "sailors"
  val hordeDevelopment: String = "horde_development"
  val provinceRazed: String = "province_razed"
  val development: String = "development"
  val developmentScaled: String = "development_scaled"
  val capitalCity: String = "capital_city"
  val patriarchState: String = "patriarch_state"
  val patriarchAuthorityLocal: String = "patriarch_authority_local"
  val patriarchAuthorityGlobal: String = "patriarch_authority_global"
  val pashaState: String = "pasha_state"
  val colonyLevel: String = "colony_level"
  val nativeAssimilation: String = "native_assimilation"
  val nativeAggressiveness: String = "native_aggressiveness"
  val core: String = "core"
  val nonCore: String = "non_core"
  val territoryCore: String = "territory_core"
  val territoryNonCore: String = "territory_non_core"
  val marchBonus: String = "march_bonus"
  val sameCultureGroup: String = "same_culture_group"
  val nonAcceptedCulture: String = "non_accepted_culture"
  val acceptedCultureDemoted: String = "accepted_culture_demoted"
  val nonAcceptedCultureRepublic: String = "non_accepted_culture_republic"
  val occupied: String = "occupied"
  val underSiege: String = "under_siege"
  val devastation: String = "devastation"
  val prosperity: String = "prosperity"
  val slavesRaided: String = "slaves_raided"
  val tolerance: String = "tolerance"
  val intolerance: String = "intolerance"
  val unrest: String = "unrest"
  val nationalism: String = "nationalism"
  val harshTreatment: String = "harsh_treatment"
  val localAutonomyMultiplicative: String = "local_autonomy_multiplicative"
  val localAutonomy: String = "local_autonomy"
  val localAutonomyTradeCompanyMultiplicative: String = "local_autonomy_trade_company_multiplicative"
  val localAutonomyTradeCompany: String = "local_autonomy_trade_company"
  val recentUprising: String = "recent_uprising"
  val friendlyRegiments: String = "friendly_regiments"
  val activeMissionary: String = "active_missionary"
  val nationalDefense: String = "national_defense"
  val resourceDepleted: String = "resource_depleted"
  val inTradeCompany: String = "in_trade_company"
  val leftTradeCompany: String = "left_trade_company"
  val scorchedEarth: String = "scorched_earth"
  val baseValues: String = "base_values"
  val aiNation: String = "ai_nation"
  val warTaxes: String = "war_taxes"
  val stability: String = "stability"
  val positiveStability: String = "positive_stability"
  val privateering: String = "privateering"
  val negativeStability: String = "negative_stability"
  val positiveMandate: String = "positive_mandate"
  val negativeMandate: String = "negative_mandate"
  val lostMandateOfHeaven: String = "lost_mandate_of_heaven"
  val cancelledLoan: String = "cancelled_loan"
  val bankLoan: String = "bank_loan"
  val inflation: String = "inflation"
  val bankruptcy: String = "bankruptcy"
  val war: String = "war"
  val peace: String = "peace"
  val unconditionalSurrender: String = "unconditional_surrender"
  val callForPeace: String = "call_for_peace"
  val warExhaustion: String = "war_exhaustion"
  val doom: String = "doom"
  val authority: String = "authority"
  val regencyCouncil: String = "regency_council"
  val tradeEfficiency: String = "trade_efficiency"
  val productionEfficiency: String = "production_efficiency"
  val tradeRefusal: String = "trade_refusal"
  val mercantilism: String = "mercantilism"
  val armyTradition: String = "army_tradition"
  val navyTradition: String = "navy_tradition"
  val positivePiety: String = "positive_piety"
  val negativePiety: String = "negative_piety"
  val defenderOfFaith: String = "defender_of_faith"
  val defenderOfFaithRefusedCta: String = "defender_of_faith_refused_cta"
  val emperor: String = "emperor"
  val statesInHre: String = "states_in_hre"
  val freeCitiesInHre: String = "free_cities_in_hre"
  val freeCityInHre: String = "free_city_in_hre"
  val memberInHre: String = "member_in_hre"
  val occupiedImperial: String = "occupied_imperial"
  val emperorRevokedReform: String = "emperor_revoked_reform"
  val numOfMarriages: String = "num_of_marriages"
  val numOfProvinces: String = "num_of_provinces"
  val countryDevelopment: String = "country_development"
  val tribalAllegiance: String = "tribal_allegiance"
  val legitimacy: String = "legitimacy"
  val hordeUnity: String = "horde_unity"
  val devotion: String = "devotion"
  val meritocracy: String = "meritocracy"
  val lowMeritocracy: String = "low_meritocracy"
  val corruption: String = "corruption"
  val rootOutCorruption: String = "root_out_corruption"
  val recoveryMotivation: String = "recovery_motivation"
  val militarizedSociety: String = "militarized_society"
  val luck: String = "luck"
  val overExtension: String = "over_extension"
  val prestige: String = "prestige"
  val noDebateInParliament: String = "no_debate_in_parliament"
  val republicanTradition: String = "republican_tradition"
  val inverseRepublicanTradition: String = "inverse_republican_tradition"
  val curiaController: String = "curia_controller"
  val boughtIndulgence: String = "bought_indulgence"
  val religiousUnity: String = "religious_unity"
  val inverseReligiousUnity: String = "inverse_religious_unity"
  val totalOccupation: String = "total_occupation"
  val totalBlockaded: String = "total_blockaded"
  val uncontestedCores: String = "uncontested_cores"
  val numObjectivesFullfilled: String = "num_objectives_fullfilled"
  val productionLeader: String = "production_leader"
  val tradeCompanyBonus: String = "trade_company_bonus"
  val bonusFromMerchantRepublics: String = "bonus_from_merchant_republics"
  val bonusFromMerchantRepublicsForTradeLeagueMember: String = "bonus_from_merchant_republics_for_trade_league_member"
  val merchantRepublicMechanicsModifier: String = "merchant_republic_mechanics_modifier"
  val federationLeader: String = "federation_leader"
  val tributaryStateBehindOverlordTechAdm: String = "tributary_state_behind_overlord_tech_adm"
  val tributaryStateBehindOverlordTechDip: String = "tributary_state_behind_overlord_tech_dip"
  val tributaryStateBehindOverlordTechMil: String = "tributary_state_behind_overlord_tech_mil"
  val libertyDesire: String = "liberty_desire"
  val isGreatPower: String = "is_great_power"
  val inGoldenEra: String = "in_golden_era"
  val absolutism: String = "absolutism"
  val lowArmyProfessionalism: String = "low_army_professionalism"
  val highArmyProfessionalism: String = "high_army_professionalism"
  val streltsyModifier: String = "streltsy_modifier"
  val powerProjection: String = "power_projection"
  val powerProjection25: String = "power_projection_25"
  val tradeCompanyStrong: String = "trade_company_strong"
  val tradeCompanyDominant: String = "trade_company_dominant"
  val largeColonialNation: String = "large_colonial_nation"
  val marchSubject: String = "march_subject"
  val vassalSubject: String = "vassal_subject"
  val daimyoSubject: String = "daimyo_subject"
  val unionSubject: String = "union_subject"
  val allNations: String = "all_nations"
  val subjectNation: String = "subject_nation"
  val vassalNation: String = "vassal_nation"
  val primitiveNation: String = "primitive_nation"
  val maintainedForts: String = "maintained_forts"
  val govRank1: String = "gov_rank_1"
  val govRank2: String = "gov_rank_2"
  val govRank3: String = "gov_rank_3"
  val govRank4: String = "gov_rank_4"
  val govRank5: String = "gov_rank_5"
  val govRank6: String = "gov_rank_6"
  val govRank7: String = "gov_rank_7"
  val govRank8: String = "gov_rank_8"
  val govRank9: String = "gov_rank_9"
  val govRank10: String = "gov_rank_10"
  val autonomyIncreased: String = "autonomy_increased"
  val autonomyDecreased: String = "autonomy_decreased"
  val revolutionTarget: String = "revolution_target"
  val dishonouredAlliance: String = "dishonoured_alliance"
  val drillingArmies: String = "drilling_armies"
  val recruitmentSabotaged: String = "recruitment_sabotaged"
  val merchantsSlandered: String = "merchants_slandered"
  val discontentSowed: String = "discontent_sowed"
  val reputationSabotaged: String = "reputation_sabotaged"
  val corruptOfficials: String = "corrupt_officials"
  val scaledTradeLeagueLeader: String = "scaled_trade_league_leader"
  val inTradeLeague: String = "in_trade_league"
  val tutorialColonialRange: String = "tutorial_colonial_range"
  val customSetup: String = "custom_setup"
  val embargoRivals: String = "embargo_rivals"
  val scutage: String = "scutage"
  val subsidizeArmies: String = "subsidize_armies"
  val supportLoyalists: String = "support_loyalists"
  val sendOfficers: String = "send_officers"
  val divertTrade: String = "divert_trade"
  val karmaJustRight: String = "karma_just_right"
  val karmaTooHigh: String = "karma_too_high"
  val karmaTooLow: String = "karma_too_low"
  val invasionNation: String = "invasion_nation"
  val nativePolicyCoexist: String = "native_policy_coexist"
  val nativePolicyTrade: String = "native_policy_trade"
  val nativePolicyHostile: String = "native_policy_hostile"
  val highHarmony: String = "high_harmony"
  val lowHarmony: String = "low_harmony"
  val overlordDaimyoAtPeace: String = "overlord_daimyo_at_peace"
  val overlordDaimyoAtPeaceMax: String = "overlord_daimyo_at_peace_max"
  val overlordDaimyoAtPeaceMin: String = "overlord_daimyo_at_peace_min"
  val overlordDaimyoSameIsolationism: String = "overlord_daimyo_same_isolationism"
  val overlordDaimyoDifferentIsolationism: String = "overlord_daimyo_different_isolationism"
  val overlordDaimyoIsolationismMax: String = "overlord_daimyo_isolationism_max"
  val overlordDaimyoIsolationismMin: String = "overlord_daimyo_isolationism_min"
  val overlordSankinKotai: String = "overlord_sankin_kotai"
  val subjectSankinKotai: String = "subject_sankin_kotai"
  val overlordExpelRonin: String = "overlord_expel_ronin"
  val subjectExpelRonin: String = "subject_expel_ronin"
  val overlordSwordHunt: String = "overlord_sword_hunt"
  val subjectSwordHunt: String = "subject_sword_hunt"
  val supplyDepotArea: String = "supply_depot_area"
  val efficientTaxFarmingModifier: String = "efficient_tax_farming_modifier"
  val landAcquisitionModifier: String = "land_acquisition_modifier"
  val lenientTaxationModifier: String = "lenient_taxation_modifier"
  val trainHorsemanshipModifier: String = "train_horsemanship_modifier"
  val promoteCultureInGovernmentModifier: String = "promote_culture_in_government_modifier"
  val seizeClericalHoldingsModifier: String = "seize_clerical_holdings_modifier"
  val inviteMinoritiesModifier: String = "invite_minorities_modifier"
  val hanafiScholarModifier: String = "hanafi_scholar_modifier"
  val hanbaliScholarModifier: String = "hanbali_scholar_modifier"
  val malikiScholarModifier: String = "maliki_scholar_modifier"
  val shafiiScholarModifier: String = "shafii_scholar_modifier"
  val ismailiScholarModifier: String = "ismaili_scholar_modifier"
  val jafariScholarModifier: String = "jafari_scholar_modifier"
  val zaidiScholarModifier: String = "zaidi_scholar_modifier"
  val regimentDrillModifier: String = "regiment_drill_modifier"
  val armyDrillModifier: String = "army_drill_modifier"
  val janissaryRegiment: String = "janissary_regiment"
  val revolutionaryGuardRegiment: String = "revolutionary_guard_regiment"
  val innovativeness: String = "innovativeness"
  val rajputRegiment: String = "rajput_regiment"
  val raidingPartiesModifier: String = "raiding_parties_modifier"
  val serfsRecievedByCossacks: String = "serfs_recieved_by_cossacks"
  val cossacksModifier: String = "cossacks_modifier"
  val expandAdministationModifier: String = "expand_administation_modifier"
  val overGoverningCapacityModifier: String = "over_governing_capacity_modifier"
  val lostHegemony: String = "lost_hegemony"
  val atPeaceRevolutionary: String = "at_peace_revolutionary"
}
